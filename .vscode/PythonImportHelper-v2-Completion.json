[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "OperationalError",
        "importPath": "psycopg2",
        "description": "psycopg2",
        "isExtraImport": true,
        "detail": "psycopg2",
        "documentation": {}
    },
    {
        "label": "OperationalError",
        "importPath": "django.db.utils",
        "description": "django.db.utils",
        "isExtraImport": true,
        "detail": "django.db.utils",
        "documentation": {}
    },
    {
        "label": "django.core.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinLengthValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "RegexValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "school.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "school.models",
        "description": "school.models",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "PHONE_VALIDATOR",
        "importPath": "school.validators",
        "description": "school.validators",
        "isExtraImport": true,
        "detail": "school.validators",
        "documentation": {}
    },
    {
        "label": "GHANA_CARD_VALIDATOR",
        "importPath": "school.validators",
        "description": "school.validators",
        "isExtraImport": true,
        "detail": "school.validators",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "importPath": "school.managers",
        "description": "school.managers",
        "isExtraImport": true,
        "detail": "school.managers",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "app.asgi",
        "description": "app.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "app.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-=hqc%(6$q-n33pl^*-b_%yco6yf7)n+vvavgp&6kg31z!+ih$j\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-=hqc%(6$q-n33pl^*-b_%yco6yf7)n+vvavgp&6kg31z!+ih$j\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    #Local apps",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    #Local apps\n    'school.apps.SchoolConfig',\n]",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"app.urls\"",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "ROOT_URLCONF = \"app.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",\n                \"django.contrib.messages.context_processors.messages\",",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "WSGI_APPLICATION = \"app.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'HOST': os.environ.get('DB_HOST'),\n        'NAME': os.environ.get('DB_NAME'),\n        'USER': os.environ.get('DB_USER'),\n        'PASSWORD': os.environ.get('DB_PASS')",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'HOST': os.environ.get('DB_HOST'),\n        'NAME': os.environ.get('DB_NAME'),\n        'USER': os.environ.get('DB_USER'),\n        'PASSWORD': os.environ.get('DB_PASS')\n    }\n}\nAUTH_USER_MODEL = 'school.User'",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'school.User'\n# Password validation\n# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "app.settings",
        "description": "app.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "app.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.urls",
        "description": "app.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n]",
        "detail": "app.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "app.wsgi",
        "description": "app.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "app.wsgi",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "school.management.commands.wait_for_db",
        "description": "school.management.commands.wait_for_db",
        "peekOfCode": "class Command(BaseCommand):\n    \"\"\"Django command to wait for database\"\"\"\n    def handle(self, *args, **options):\n        \"\"\"Entrypoint for command. \"\"\"\n        self.stdout.write('Waiting for Database...')\n        db_up = False\n        while db_up is False:\n            try:\n                self.check(databases=['default'])\n                db_up = True",
        "detail": "school.management.commands.wait_for_db",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "school.migrations.0001_initial",
        "description": "school.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Programme',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "school.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "SchoolConfig",
        "kind": 6,
        "importPath": "school.apps",
        "description": "school.apps",
        "peekOfCode": "class SchoolConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'school'",
        "detail": "school.apps",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "school.managers",
        "description": "school.managers",
        "peekOfCode": "class UserManager(BaseUserManager):\n    \"\"\"\"Manage for users\"\"\"\n    def create_user(self, email, password=None, **extra_fields):\n        \"\"\"Create, save and return new user\"\"\"\n        if not email:\n            raise ValueError('User must have an email address')\n        user = self.model(email=email, **extra_fields)\n        user.set_password(password)\n        user.save(using=self._db)\n        return user",
        "detail": "school.managers",
        "documentation": {}
    },
    {
        "label": "TimeStampedModel",
        "kind": 6,
        "importPath": "school.models",
        "description": "school.models",
        "peekOfCode": "class TimeStampedModel(models.Model):\n    \"\"\"Abstract model with created and modified timestamps\"\"\"\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    class Meta:\n        abstract = True\nclass IDGenerationMixin:\n    \"\"\"Mixin for models that need auto-generated IDs\"\"\"\n    ID_PREFIX = ''  # Default prefix, should be overridden in subclass\n    id_field = None  # Should be set in subclass",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "IDGenerationMixin",
        "kind": 6,
        "importPath": "school.models",
        "description": "school.models",
        "peekOfCode": "class IDGenerationMixin:\n    \"\"\"Mixin for models that need auto-generated IDs\"\"\"\n    ID_PREFIX = ''  # Default prefix, should be overridden in subclass\n    id_field = None  # Should be set in subclass\n    def generate_id(self):\n        \"\"\"Generate a unique ID based on the prefix, school code, and year\"\"\"\n        if not hasattr(self, 'school') or not self.school:\n            raise ValueError(\"School is required for ID generation\")\n        year = str(getattr(self, 'year_admitted', timezone.now().year))[-2:]\n        prefix = self.ID_PREFIX",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "School",
        "kind": 6,
        "importPath": "school.models",
        "description": "school.models",
        "peekOfCode": "class School(TimeStampedModel):\n    SCHOOL_TYPE = [\n        ('basic', 'Basic School'),\n        ('shs', 'Senior High School (SHS)'),\n        ('technical', 'Technical/Vocational School'),\n        ('combined', 'Combined School (Multiple Levels)'),\n    ]\n    REGION_CHOICES = [\n        ('greater_accra', 'Greater Accra'),\n        ('ashanti', 'Ashanti'),",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "Person",
        "kind": 6,
        "importPath": "school.models",
        "description": "school.models",
        "peekOfCode": "class Person(TimeStampedModel):\n    GENDER_CHOICES = (('M', 'Male'), ('F', 'Female'))\n    # school field is inherited from TenantAwareMixin\n    user = models.OneToOneField(\n        settings.AUTH_USER_MODEL,\n        on_delete=models.SET_NULL,\n        related_name=\"%(class)s_profile\",\n        blank=True, null=True\n    )\n    first_name = models.CharField(",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "school.models",
        "description": "school.models",
        "peekOfCode": "class User(AbstractBaseUser, PermissionsMixin, TimeStampedModel):\n    \"\"\"User in the system - each user belongs to a specific school/tenant\"\"\"\n    # school field is inherited from TenantAwareMixin\n    username = models.CharField(max_length=150, unique=True)\n    email = models.EmailField(max_length=255, blank=True, null=True)\n    is_active = models.BooleanField(default=True)\n    is_teacher = models.BooleanField(default=False)\n    is_student = models.BooleanField(default=False)\n    # School admin, not superuser\n    is_admin = models.BooleanField(default=False)",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "Programme",
        "kind": 6,
        "importPath": "school.models",
        "description": "school.models",
        "peekOfCode": "class Programme(TimeStampedModel):\n    \"\"\"Academic programmes like Arts, Business, Science\"\"\"\n    name = models.CharField(max_length=100, unique=True)\n    code = models.CharField(max_length=5, unique=True,\n                            editable=False, blank=True)\n    description = models.TextField(blank=True)\n    class Meta:\n        verbose_name = 'Programme'\n        verbose_name_plural = 'Programmes'\n        ordering = ['name']",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "Class",
        "kind": 6,
        "importPath": "school.models",
        "description": "school.models",
        "peekOfCode": "class Class(TimeStampedModel):\n    \"\"\"Enhanced Class/Form with Programme and Level structure\"\"\"\n    LEVEL_CHOICES = [\n        (1, 'Form 1'),\n        (2, 'Form 2'),\n        (3, 'Form 3'),\n    ]\n    name = models.CharField(\n        max_length=10,\n        help_text=\"Class section (e.g., A, B, C)\"",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "kind": 6,
        "importPath": "school.models",
        "description": "school.models",
        "peekOfCode": "class Student(Person, IDGenerationMixin):\n    \"\"\"Student profile\"\"\"\n    ID_PREFIX = 'STU'\n    id_field = 'student_id'\n    student_id = models.CharField(\n        max_length=20, unique=True, editable=False,\n        help_text=\"Auto-generated student ID\"\n    )\n    year_admitted = models.PositiveIntegerField(\n        \"Year Admitted\", default=timezone.now().year,",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "Subject",
        "kind": 6,
        "importPath": "school.models",
        "description": "school.models",
        "peekOfCode": "class Subject(TimeStampedModel):\n    \"\"\"Subject taught in the school\"\"\"\n    name = models.CharField(max_length=100, unique=True)\n    subject_type = models.CharField(\n        max_length=50,\n        choices=[\n            ('core', 'Core'),\n            ('elective', 'Elective'),\n            ('extracurricular', 'Extracurricular Activity')\n        ],",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "Teacher",
        "kind": 6,
        "importPath": "school.models",
        "description": "school.models",
        "peekOfCode": "class Teacher(Person, IDGenerationMixin):\n    \"\"\"Teacher profile\"\"\"\n    ID_PREFIX = 'TCH'\n    id_field = 'teacher_id'\n    teacher_id = models.CharField(\n        max_length=20, unique=True, editable=False,\n        help_text=\"Auto-generated teacher ID\"\n    )\n    subjects = models.ManyToManyField(\n        'Subject',",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "PHONE_VALIDATOR",
        "kind": 5,
        "importPath": "school.validators",
        "description": "school.validators",
        "peekOfCode": "PHONE_VALIDATOR = RegexValidator(\n    regex=r'^(\\+233|0)[0-9]{9}$',\n    message=\"Phone number must be in format: +233XXXXXXXXX or 0XXXXXXXXX\"\n)\n# Ghana Card ID validator\nGHANA_CARD_VALIDATOR = RegexValidator(\n    regex=r'^GHA-[0-9]{9}-[0-9]$',\n    message=\"Ghana Card number must be in format: GHA-XXXXXXXXX-X\"\n)",
        "detail": "school.validators",
        "documentation": {}
    },
    {
        "label": "GHANA_CARD_VALIDATOR",
        "kind": 5,
        "importPath": "school.validators",
        "description": "school.validators",
        "peekOfCode": "GHANA_CARD_VALIDATOR = RegexValidator(\n    regex=r'^GHA-[0-9]{9}-[0-9]$',\n    message=\"Ghana Card number must be in format: GHA-XXXXXXXXX-X\"\n)",
        "detail": "school.validators",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"app.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]