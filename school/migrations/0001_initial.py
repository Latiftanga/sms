# Generated by Django 5.2.3 on 2025-06-16 00:59

import django.core.validators
import django.db.models.deletion
import school.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.IntegerField(unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-year'],
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('color', models.CharField(default='#1B5E20', max_length=7)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(blank=True, editable=False, max_length=5, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Programme',
                'verbose_name_plural': 'Programmes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Phone number must be in format: +233XXXXXXXXX or 0XXXXXXXXX', regex='^(\\+233|0)[0-9]{9}$')])),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True, null=True)),
                ('motto', models.CharField(blank=True, max_length=200)),
                ('established_year', models.IntegerField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='school/')),
                ('academic_year_start_month', models.IntegerField(default=9)),
                ('terms_per_year', models.IntegerField(default=3)),
                ('headmaster_name', models.CharField(blank=True, max_length=200)),
                ('assistant_headmaster_name', models.CharField(blank=True, max_length=200)),
                ('primary_color', models.CharField(default='#1B5E20', max_length=7)),
                ('secondary_color', models.CharField(default='#2E7D32', max_length=7)),
            ],
            options={
                'verbose_name': 'School Information',
                'verbose_name_plural': 'School Information',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('subject_type', models.CharField(choices=[('core', 'Core'), ('elective', 'Elective'), ('extracurricular', 'Extracurricular Activity')], default='core', help_text='Type of subject', max_length=50)),
                ('code', models.CharField(blank=True, max_length=10, unique=True)),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Class section (e.g., A, B, C)', max_length=10)),
                ('level', models.PositiveSmallIntegerField(choices=[(1, 'Form 1'), (2, 'Form 2'), (3, 'Form 3')], help_text='Class level (1, 2, or 3)')),
                ('capacity', models.PositiveIntegerField(default=45)),
                ('programme', models.ForeignKey(blank=True, help_text='Academic programme (optional for SHS 1)', null=True, on_delete=django.db.models.deletion.CASCADE, to='school.programme')),
            ],
            options={
                'verbose_name': 'Class',
                'verbose_name_plural': 'Classes',
                'ordering': ['level', 'programme__code', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('date_of_birth', models.DateField()),
                ('phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be in format: +233XXXXXXXXX or 0XXXXXXXXX', regex='^(\\+233|0)[0-9]{9}$')])),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=128, null=True)),
                ('ghana_card_number', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Ghana Card number must be in format: GHA-XXXXXXXXX-X', regex='^GHA-[0-9]{9}-[0-9]$')])),
                ('is_active', models.BooleanField(default=True)),
                ('student_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('year_admitted', models.IntegerField()),
                ('guardian_name', models.CharField(blank=True, max_length=200, null=True)),
                ('guardian_phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be in format: +233XXXXXXXXX or 0XXXXXXXXX', regex='^(\\+233|0)[0-9]{9}$')])),
                ('guardian_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('relationship_to_guardian', models.CharField(blank=True, max_length=50, null=True)),
                ('current_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='school.class')),
                ('house', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='school.house')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(school.models.IDGenerationMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('date_of_birth', models.DateField()),
                ('phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be in format: +233XXXXXXXXX or 0XXXXXXXXX', regex='^(\\+233|0)[0-9]{9}$')])),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=128, null=True)),
                ('ghana_card_number', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Ghana Card number must be in format: GHA-XXXXXXXXX-X', regex='^GHA-[0-9]{9}-[0-9]$')])),
                ('is_active', models.BooleanField(default=True)),
                ('teacher_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('qualification', models.CharField(max_length=200)),
                ('specialization', models.CharField(blank=True, max_length=200, null=True)),
                ('years_of_experience', models.IntegerField(default=0)),
                ('date_of_employment', models.DateField()),
                ('subjects', models.ManyToManyField(blank=True, to='school.subject')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(school.models.IDGenerationMixin, models.Model),
        ),
        migrations.AddField(
            model_name='house',
            name='house_master',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='houses_led', to='school.teacher'),
        ),
        migrations.AddField(
            model_name='class',
            name='class_teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taught_classes', to='school.teacher'),
        ),
        migrations.AlterUniqueTogether(
            name='class',
            unique_together={('level', 'programme', 'name')},
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('term_number', models.IntegerField(choices=[(1, 'First Term'), (2, 'Second Term'), (3, 'Third Term')])),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms', to='school.academicyear')),
            ],
            options={
                'ordering': ['academic_year', 'term_number'],
                'unique_together': {('academic_year', 'term_number')},
            },
        ),
    ]
